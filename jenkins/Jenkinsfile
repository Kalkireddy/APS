pipeline {
    agent any
    environment {
        REGISTRY = "docker.io/your-dockerhub-username"
        IMAGE = "aps-app"
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-username/APS.git'
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t $REGISTRY/$IMAGE:latest .'
            }
        }
        stage('Test') {
            steps {
                sh 'docker run -d -p 8000:8000 --name aps-test $REGISTRY/$IMAGE:latest'
                sh 'sleep 5 && curl -f http://localhost:8000/health || exit 1'
                sh 'docker rm -f aps-test'
            }
        }
        stage('Push') {
            steps {
                withCredentials([string(credentialsId: 'dockerhub-pass', variable: 'DOCKERHUB_PASS')]) {
                    sh 'echo $DOCKERHUB_PASS | docker login -u your-dockerhub-username --password-stdin'
                    sh 'docker push $REGISTRY/$IMAGE:latest'
                }
            }
        }
    }
    post {
        always {
            echo "Cleaning up..."
            sh 'docker system prune -af || true'
        }
        success {
            echo "✅ Build & Push Successful!"
        }
        failure {
            echo "❌ Pipeline Failed!"
        }
    }
}